{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAkDeA,MA1Bf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OAAO,yBAAKC,UAAU,SAClB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBAETD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,gBAAgBI,OAGlD,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAE,SC+JvCC,G,kNAnCbC,MAAQ,CACNC,WAAW,EACXC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,4DADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnBM,QAAQC,IAAI,CAACP,WACb,EAAKQ,SAAS,CAACT,WAAU,EAAOC,WAHtB,2C,kEAMVS,KAAKR,c,+BAEE,IAAD,EACoBQ,KAAKX,MAA1BC,EADC,EACDA,UAAWC,EADV,EACUA,OAClB,OAAO,6BAASX,UAAU,aACvBU,EACC,yBAAKV,UAAU,UAAS,0BAAMA,UAAU,eAAhB,eACxB,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAkB,GAAK,OACf,kBAAC,EAAD,CACAf,IAAKe,EAAMC,GACXA,GAAID,EAAMC,GACV3B,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAME,mBACdxB,OAAQsB,EAAMtB,kB,GA3BNyB,IAAMC,YC3JxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2ff6e18b.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// //component state가 필요없을 때는 class component일 필요 없음\r\n\r\n// function Movie({id, year, title, summary, poster}){\r\n//     console.log({title});\r\n//     return <h4>{title}</h4>;\r\n// }\r\n\r\n// Movie.propTypes = {\r\n//     id: PropTypes.number.isRequired,\r\n//     year: PropTypes.number.isRequired,\r\n//     title: PropTypes.string.isRequired,\r\n//     summary: PropTypes.string.isRequired,\r\n//     poster: PropTypes.string.isRequired\r\n// };\r\n\r\n// export default Movie;\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\nreturn <div className=\"movie\">\r\n    <img src={poster} alt={title} title={title}/>\r\n    <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul className=\"movie_genres\">\r\n            {/* map은 itemNumber를 arguement로 줌 */}\r\n            {genres.map((genre, index) => (\r\n                <li key={index} className=\"genres_genre\">{genre}</li>\r\n            ))}\r\n        </ul>\r\n        <p className=\"movie_summary\">{summary.slice(0,180)}</p>\r\n    </div>\r\n</div>;\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport axios from 'axios'; //axios 설치후 import\nimport Movie from \"./Movie.js\";\nimport \"./App.css\";\n\n/*########## function component ##########*/\n\n// function Food({name ,picture, rating}){ // {fav}는 props.fav랑 동일한 값\n//   return <div>\n//     <h1>I love {name}!!</h1>\n//     <img src={picture} alt={name}/>\n//     <h4>{rating} / 5.0</h4>\n//   </div>\n// }\n\n// Food.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   rating: PropTypes.number.isRequired\n//   //isRequired가 필수는 아님\n//   // string과 number 이외에도 여러 옵션 존재함\n// }\n\n// const foodILike = [\n//   {\n//     id:1,\n//     name: \"kimchi\",\n//     image:\n//       \"https://www.maangchi.com/wp-content/uploads/2014/06/whole-cabbage-kimchi.jpg\",\n//     rating:5\n//   },\n//   {\n//     id:2,\n//     name: \"donkasu\",\n//     image:\n//       \"https://i1.wp.com/seonkyounglongest.com/wp-content/uploads/2017/07/donkasu-02.jpg?resize=1000%2C667\",\n//     rating:4.5\n//   },\n//   {\n//     id:3,\n//     name: \"samgyeopsal\",\n//     image:\n//       \"https://t1.daumcdn.net/cfile/tistory/9942B3395A3501C304\",\n//     rating:3.4\n//   },\n//   {\n//     id:4,\n//     name: \"bulgogi\",\n//     image:\n//       \"https://recipe1.ezmember.co.kr/cache/recipe/2016/12/30/df939769792632a48a0eba8bc895e8601.jpg\",\n//     rating:2.5\n//   },\n//   {\n//     id:5,\n//     name: \"nangmyeon\",\n//     image:\n//       \"https://m.yorivery.com/data/goods/20/05/21//1000000878/1000000878_detail_143.jpg\",\n//     rating:4\n//   }\n// ];\n\n// function App() {\n//   return (\n//     <div>\n//       {foodILike.map(dish => (\n//       <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating}/>\n//       ))}\n//     </div>\n//   );\n// }\n\n\n/*########## class component ##########*/\n// class App extends React.Component{ //App component는 React component로 부터 확장됨\n//   //class react component는 return을 가지고 있지 않음\n  \n//   constructor(props){\n//     super(props);\n//     console.log(\"hello\");\n//   }\n//   state = {\n//     count: 0\n//   }; // 바꿀 데이터를 state 안에 넣음\n//   add = () => {\n//     // this.setState({count: this.state.count + 1}) this.state대신에 current로 this.state값 받아올 수 있음\n//     //this.state는 외부의 값에 의존하게 되므로 좋은 방법이 아님!!\n//     //this.state는 외부의 state의 값이지만 current를 사용하게 되면 현재 state값 받아올 수 있음\n//     this.setState(current => ({count: current.count + 1}))\n//   };\n//   minus = () => {\n//     // this.setState({count: this.state.count - 1})\n//     this.setState(current => ({count: current.count - 1}))\n//   };\n//   componentDidMount(){\n//     console.log(\"Component rendered!\");\n//   }\n//   componentDidUpdate(){\n//     console.log(\"I just updated!\");\n//   }\n\n//   render(){\n//     console.log(\"I'm rendering\");\n//   return (\n//     <div>\n//       <h1>The number is : {this.state.count}</h1>\n//       <button onClick={this.add}>ADD</button>\n//       <button onClick={this.minus}>Minus</button>\n//     </div>\n//   );\n//   }\n// }\n\n\n// class App extends React.Component{\n//   state = {\n//     isLoading: true,\n//     movies: []\n//   };\n\n//   getMovies = async () => {\n//      //async를 사용하지 않으면 await 사용할 수 없음\n//     // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n//     // console.log(movies.data.data.movies);\n\n//     //movies.data.data.movies 대신 {data: {data: {movies}}}\n//     const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n//     this.setState({movies, isLoading: false}); // 하나의 setState에서 두개의 state를 변경함\n//     console.log({movies});\n//   };\n\n//   componentDidMount(){\n//     // setTimeout(() => {\n//     //   this.setState({isLoading : false})\n//     // },6000)\n\n//     //Fetching Movies from API\n//     this.getMovies();\n//   }\n//  render(){\n//    const {isLoading, movies} = this.state;\n//     return (<div>\n//       {isLoading \n//       ? \"LOADING...\" \n//       : movies.map(movie => (\n//        <Movie \n//         key={movie.id} \n//         id={movie.id} \n//         year={movie.year} \n//         title={movie.title} \n//         summary={movie.summary} \n//         poster={movie.medium_cover_image}\n//        />\n//        ))}\n//   </div>\n//   );\n//  }\n// }\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies : []\n  }\n  getMovies = async () => {\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log({movies});\n    this.setState({isLoading:false, movies});\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n  const {isLoading, movies} = this.state;\n  return <section className=\"container\">\n    {isLoading\n    ? <div className=\"loader\"><span className=\"loader_text\">LOAIDNG...</span></div>\n    : <div className=\"movies\">\n        {movies.map(movie => (\n          <Movie\n          key={movie.id} \n          id={movie.id} \n          year={movie.year}\n          title={movie.title} \n          summary={movie.summary}\n          poster={movie.medium_cover_image}\n          genres={movie.genres}\n          />\n        ))}\n    </div> \n    }\n    </section>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}